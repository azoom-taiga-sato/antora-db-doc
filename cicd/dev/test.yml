steps:
  - name: gcr.io/cloud-builders/gcloud
    args:
      - '-c'
      - >
        gcloud secrets versions access latest --project=${PROJECT_ID}
        --secret=${_APP_NAME}-env --format='get(payload.data)' | tr '_-' '/+' |
        base64 -d > .env
    id: prepare-secret
    waitFor:
      - '-'
    entrypoint: bash
  - name: gcr.io/cloud-builders/gcloud
    args:
      - '-c'
      - |
        echo "Contents of .env:"
        cat .env
    id: echo-secrets
    waitFor:
      - prepare-secret
    entrypoint: bash
  - name: gcr.io/cloud-builders/gcloud
    args:
      - '-c'
      - |
        [ -d /cloudsql ] || mkdir /cloudsql
        chmod -R 777 /cloudsql
    id: prepare-socket-folder
    waitFor:
      - '-'
    entrypoint: bash
    volumes:
      - name: cloudsql
        path: /cloudsql
  - name: '${_CLOUD_SQL_PROXY_IMAGE_NAME}'
    args:
      - /cloud_sql_proxy
      - '-dir=/cloudsql'
      - '-instances=${_CLOUD_SQL_INSTANCES}'
    id: start-cloudsql-proxy
    waitFor:
      - prepare-socket-folder
    volumes:
      - name: cloudsql
        path: /cloudsql
  - name: 'k1low/tbls:1.43.1'
    env:
      - >-
        DSN=mysql://taiga.satou:Z5DG81feVqN6@localhost/tbls_demo_box?socketPath=/cloudsql/${_CLOUD_SQL_INSTANCES}
    args:
      - '-c'
      - >
        export
        DSN="mysql://taiga.satou:Z5DG81feVqN6@localhost/tbls_demo_box?socketPath=/cloudsql/azoom-taiga-satou:asia-northeast1:tbls-demo"

        tbls doc --config ./.tbls.yml
    id: generate-db-doc
    entrypoint: sh
    volumes:
      - name: cloudsql
        path: /cloudsql
  - name: gcr.io/cloud-builders/docker
    args:
      - '-c'
      - >-
        docker ps -q --filter ancestor="${_CLOUD_SQL_PROXY_IMAGE_NAME}" | xargs
        docker stop
    id: kill-cloudsql-proxy
    entrypoint: sh
  - name: gcr.io/cloud-builders/docker
    args:
      - pull
      - pandoc/core
    id: pull-pandoc
    waitFor:
      - kill-cloudsql-proxy
  - name: gcr.io/cloud-builders/gcloud
    args:
      - '-c'
      - chmod +x convert-tbls-doc.sh
    id: set-execute-permission
    entrypoint: sh
  - name: gcr.io/cloud-builders/docker
    args:
      - '-c'
      - ./convert-tbls-doc.sh
    id: convert-tbls-doc
    waitFor:
      - set-execute-permission
    entrypoint: sh
  - name: gcr.io/cloud-builders/gcloud
    args:
      - '-c'
      - >
        echo "Contents of docs/modules/tbls/:" && ls -R docs/modules/tbls/;

        echo "Contents of docs/modules/ROOT/pages/index.adoc:" && cat
        docs/modules/ROOT/pages/index.adoc;

        echo "Contents of docs/modules/tbls/nav.adoc:" && cat
        docs/modules/tbls/nav.adoc
    id: echo-tbls-doc
    waitFor:
      - convert-tbls-doc
    entrypoint: sh
  - name: antora/antora
    args:
      - '--fetch'
      - antora-playbook.yml
    id: antora-doc-creation
  - name: gcr.io/cloud-builders/gcloud
    args:
      - '-c'
      - |
        for version_dir in "${_BASE_DIR}"/*; do
          if [ -d "$version_dir" ]; then
            version=$(basename "$version_dir")
            
            mkdir -p "$version_dir/schemaspy"
            
            echo "This is the version $version of index" > "$version_dir/schemaspy/index.html"
          fi
        done
    id: create-schemaspy-index-file
    waitFor:
      - antora-doc-creation
    entrypoint: sh
  - name: 'gcr.io/kaniko-project/executor:latest'
    args:
      - '--dockerfile=./cicd/dev/Dockerfile'
      - '--destination=gcr.io/${PROJECT_ID}/${_APP_NAME}:${_TAG_NAME}'
    id: build-app-image
    waitFor:
      - antora-doc-creation
  - name: gcr.io/cloud-builders/gcloud
    args:
      - '-c'
      - |
        gcloud beta run deploy ${_APP_NAME} \
          --platform managed \
          --region asia-northeast1 \
          --allow-unauthenticated \
          --image gcr.io/${PROJECT_ID}/${_APP_NAME}:${_TAG_NAME}
    id: deploy
    entrypoint: bash
timeout: 900s
options:
  logging: CLOUD_LOGGING_ONLY
substitutions:
  _CLOUD_SQL_PROXY_IMAGE_NAME: 'gcr.io/cloudsql-docker/gce-proxy:1.35.4'
  _BASE_DIR: /workspace/outputs/antora-db-doc
  _APP_NAME: antora-db-doc
  _APP_DOCKER_FILE: cicd/dev/Dockerfile
  _TAG_NAME: latest
  _CLOUD_SQL_INSTANCES: 'azoom-taiga-satou:asia-northeast1:tbls-demo'
